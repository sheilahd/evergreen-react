[{"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/App/index.js":"1","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/index.js":"2","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/constants/routes.js":"3","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Firebase/context.js":"4","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/index.js":"5","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Account/index.js":"6","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/SignUp/index.js":"7","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/SignIn/index.js":"8","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/team.js":"9","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Home/headerHome.js":"10","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/PasswordChange/index.js":"11","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Firebase/firebase.js":"12","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Firebase/index.js":"13","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Home/index.js":"14","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/PasswordForget/index.js":"15","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/AddinsDashboard/index.js":"16","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/services.js":"17","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/contactUs.js":"18","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/footer.js":"19","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Navigation/index.js":"20","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Session/withAuthentication.js":"21","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/constants/roles.js":"22","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/about.js":"23","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/SignOut/index.js":"24"},{"size":1264,"mtime":1606623447000,"results":"25","hashOfConfig":"26"},{"size":537,"mtime":1607891912000,"results":"27","hashOfConfig":"26"},{"size":331,"mtime":1607220450000,"results":"28","hashOfConfig":"26"},{"size":296,"mtime":1606623447000,"results":"29","hashOfConfig":"26"},{"size":580,"mtime":1609902751000,"results":"30","hashOfConfig":"26"},{"size":554,"mtime":1606623447000,"results":"31","hashOfConfig":"26"},{"size":4846,"mtime":1607233254000,"results":"32","hashOfConfig":"26"},{"size":3613,"mtime":1607233297000,"results":"33","hashOfConfig":"26"},{"size":3815,"mtime":1607210434000,"results":"34","hashOfConfig":"26"},{"size":1322,"mtime":1607220898000,"results":"35","hashOfConfig":"26"},{"size":2069,"mtime":1606623448000,"results":"36","hashOfConfig":"26"},{"size":2157,"mtime":1608675994000,"results":"37","hashOfConfig":"26"},{"size":162,"mtime":1608676158000,"results":"38","hashOfConfig":"26"},{"size":748,"mtime":1609889485000,"results":"39","hashOfConfig":"26"},{"size":2183,"mtime":1606623448000,"results":"40","hashOfConfig":"26"},{"size":13176,"mtime":1607234677000,"results":"41","hashOfConfig":"26"},{"size":1975,"mtime":1607233799000,"results":"42","hashOfConfig":"26"},{"size":4118,"mtime":1609903476000,"results":"43","hashOfConfig":"26"},{"size":1688,"mtime":1609901937000,"results":"44","hashOfConfig":"26"},{"size":5759,"mtime":1607236698000,"results":"45","hashOfConfig":"26"},{"size":1054,"mtime":1606623448000,"results":"46","hashOfConfig":"26"},{"size":30,"mtime":1606623608000,"results":"47","hashOfConfig":"26"},{"size":2256,"mtime":1607202034000,"results":"48","hashOfConfig":"26"},{"size":481,"mtime":1606623448000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"dwf0aw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/App/index.js",[],["102","103"],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/index.js",[],["104","105"],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/constants/routes.js",[],["106","107"],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Firebase/context.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/index.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Account/index.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/SignUp/index.js",["108"],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/SignIn/index.js",["109"],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/team.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Home/headerHome.js",["110"],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/PasswordChange/index.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Firebase/firebase.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Firebase/index.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Home/index.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/PasswordForget/index.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/AddinsDashboard/index.js",["111"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\n\nclass Addins extends Component {\n  state = {\n    addins: [],\n\n    modalInsert: false,\n    modalEdit: false,\n    email: \"\",\n    id: \"\",\n\n    inputsForm: {\n      title: \"\",\n      category: \"\",\n      discipline: \"\",\n      description: \"\",\n      qty: \"\",\n\n      selectedOption: \"Construction\",\n    },\n  };\n\n  componentDidMount() {\n    this.props.firebase.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ id: user.uid, email: user.email });\n\n        this.props.firebase.db\n          .ref(\"/user-addins/\" + user.uid)\n          .on(\"value\", (snapshot) => {\n            const addins = [];\n\n            const addinsKeys = snapshot.forEach((addin) => {\n              const userAddin = { ...addin.val(), id: addin.key };\n              addins.push(userAddin);\n            });\n            this.setState({ addins: addins });\n          });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  /* <-- functions for Table --> */\n\n  handleEditRequisition(e) {\n    let addin = this.state.inputsForm;\n    this.props.firebase.db.ref(`/addins/${addin.id}`).set(addin);\n    this.props.firebase.db\n      .ref(`/user-addins/${this.state.id}/${addin.id}`)\n      .set(addin);\n    this.setState({ modalEdit: false });\n  }\n  handleDeleteRequisition(addin) {\n    this.props.firebase.db.ref(`/addins/${addin.id}`).remove();\n    this.props.firebase.db\n      .ref(`/user-addins/${this.state.id}/${addin.id}`)\n      .remove();\n  }\n  closeModal() {\n    this.setState({ modalInsert: false });\n  }\n  /* <-- functions for Table --> */\n\n  /* <-- functions for Modal --> */\n  handleChange = (e) => {\n    const inputsForm = { ...this.state.inputsForm };\n    inputsForm[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ inputsForm });\n  };\n\n  handleCreateRequisition() {\n    const uid = this.state.id;\n    const { inputsForm } = this.state;\n\n    let newAddinKey = this.props.firebase.db.ref().child(\"addins\").push().key;\n    let updates = {};\n    updates[\"/addins/\" + newAddinKey] = inputsForm;\n    updates[\"/user-addins/\" + uid + \"/\" + newAddinKey] = inputsForm;\n    return this.props.firebase.db.ref().update(updates);\n  }\n\n  handleOptionChange = (changeEvent) => {\n    this.setState({\n      inputsForm: {\n        ...this.state.inputsForm,\n        selectedOption: changeEvent.target.value,\n      },\n    });\n  };\n\n  handleCheckSubmit = (changeEvent) => {\n    changeEvent.preventDefault();\n    console.log(\"You have submitted:\", this.state.inputsForm.selectedOption);\n  };\n\n  /* <-- functions for Modal --> */\n  render() {\n    console.log(`this are my addins`, this.state.addins);\n    return (\n      <div className=\"App\">\n        <div\n          style={{\n            position: \"center\",\n            width: \"70%\",\n            marginLeft: \"15%\",\n            marginRight: \"15%\",\n            marginTop: \"5%\",\n          }}\n        >\n          <br />\n          <br />\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.setState({ modalInsert: true })}\n          >\n            HOA Approval Request\n          </button>\n          <br />\n          <br />\n\n          {/* <-- Table --> */}\n          <div className=\" header intro-lead-in\">\n            Your Requests to HOA Board:\n          </div>\n          <Table\n            responsive=\"lg\"\n            className=\"table-responsive-sm table-bordered table-hover\"\n          >\n            <thead className=\"table thead text-center\">\n              <tr>\n                <th>Neighbor Email </th>\n                <th>Document Name </th>\n                <th>Category</th>\n                <th>Discipline</th>\n                <th>Description</th>\n                <th>Qty</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody className=\"table tbody\">\n              {this.state.addins.map((addin, index) => {\n                console.log(addin);\n                return (\n                  <tr key={addin.id}>\n                    <td>{this.state.email}</td>\n\n                    <td>{addin.title}</td>\n                    <td>{addin.category}</td>\n                    <td>{addin.selectedOption}</td>\n                    <td>{addin.description}</td>\n                    <td>{addin.qty}</td>\n\n                    <td>\n                      <button\n                        className=\"btn btn-secondary btn-sm mx-2\"\n                        onClick={() =>\n                          this.setState({ modalEdit: true, inputsForm: addin })\n                        }\n                      >\n                        Edit\n                      </button>\n\n                      <button\n                        className=\"btn btn-danger btn-sm\"\n                        onClick={() => this.handleDeleteRequisition(addin)}\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n\n          {/* /* </-- Table --> */}\n\n          <br />\n          <br />\n\n          <Link to={ROUTES.HOME}>\n            <button className=\"btn btn-secondary btn-sm mx-2\">\n              Back to Home Page\n            </button>\n          </Link>\n\n          {/* <-- Modal Insert --> */}\n          <Modal isOpen={this.state.modalInsert}>\n            <ModalHeader>\n              Fill out the Form for your Addin Requests:\n            </ModalHeader>\n\n            <ModalBody>\n              <div className=\"form-group\">\n                <label>Document Name: </label>\n                <br />\n                <input\n                  type=\"textarea\"\n                  value={this.state.inputsForm.title}\n                  className=\"form-control\"\n                  name=\"title\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <label>Category: </label>\n                <br />\n                <input\n                  type=\"text\"\n                  value={this.state.inputsForm.category}\n                  className=\"form-control\"\n                  name=\"category\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                {/* <-- Radio button --> */}\n                <form onSubmit={this.handleCheckSubmit}>\n                  <h5>Discipline:</h5>\n                  <div className=\"radio-check\">\n                    <label>\n                      <br />\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Construction\"\n                        checked={\n                          this.state.inputsForm.selectedOption ===\n                          \"Construction\"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Construction\n                    </label>\n                  </div>\n                  <div className=\"radio-check\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Landscaping\"\n                        checked={\n                          this.state.inputsForm.selectedOption === \"Landscaping\"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Landscaping\n                    </label>\n                  </div>\n                </form>\n                {/* <-- Radio button --> */}\n                <br />\n\n                <label>Description: </label>\n                <br />\n                <input\n                  type=\"textarea\"\n                  value={this.state.inputsForm.description}\n                  className=\"form-control\"\n                  name=\"description\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <label>Qty: </label>\n                <br />\n                <input\n                  type=\"number\"\n                  value={this.state.inputsForm.qty}\n                  className=\"form-control\"\n                  name=\"qty\"\n                  onChange={this.handleChange}\n                />\n                <br />\n              </div>\n            </ModalBody>\n\n            <ModalFooter>\n              <button\n                className=\"btn btn-success\"\n                onClick={(e) => {\n                  this.handleCreateRequisition(e);\n                  this.closeModal();\n                }}\n              >\n                Insert\n              </button>{\" \"}\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => this.setState({ modalInsert: false })}\n              >\n                Delete\n              </button>\n            </ModalFooter>\n          </Modal>\n          {/* /<-- Modal Insert --> */}\n\n          {/* <-- Modal Edit --> */}\n          <Modal isOpen={this.state.modalEdit}>\n            <ModalHeader>Edit Your Request:</ModalHeader>\n            <ModalBody>\n              <div className=\"form-group\">\n                <label>Document Name: </label>\n                <br />\n                <input\n                  type=\"text\"\n                  value={this.state.inputsForm.title}\n                  className=\"form-control\"\n                  name=\"title\"\n                  onChange={this.handleChange}\n                />\n                <br />\n\n                <label>Category: </label>\n                <br />\n                <input\n                  type=\"text\"\n                  value={this.state.inputsForm.category}\n                  className=\"form-control\"\n                  name=\"category\"\n                  onChange={this.handleChange}\n                />\n                <br />\n\n                {/* <-- Radio button --> */}\n                <form onSubmit={this.handleCheckSubmit}>\n                  <h4>Discipline:</h4>\n                  <div className=\"radio-check\">\n                    <label>\n                      <br />\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Construction\"\n                        checked={\n                          this.state.inputsForm.selectedOption ===\n                          \"Construction\"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Construction\n                    </label>\n                  </div>\n                  <div className=\"radio-check\">\n                    <label>\n                      <br />\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Landscaping \"\n                        checked={\n                          this.state.inputsForm.selectedOption ===\n                          \"Landscaping \"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Landscaping\n                    </label>\n                  </div>\n                </form>\n                {/* <-- Radio button --> */}\n                <br />\n                <label>Description: </label>\n                <br />\n                <input\n                  type=\"textarea\"\n                  value={this.state.inputsForm.description}\n                  className=\"form-control\"\n                  name=\"description\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <label> Qty: </label>\n                <br />\n                <input\n                  type=\"number\"\n                  value={this.state.inputsForm.qty}\n                  className=\"form-control\"\n                  name=\"qty\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <br />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <button\n                className=\"btn btn-success\"\n                onClick={(e) => this.handleEditRequisition(e)}\n              >\n                Submit Changes\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => this.setState({ modalEdit: false })}\n              >\n                Delete\n              </button>\n            </ModalFooter>\n          </Modal>\n          {/* /<-- Modal Edit --> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = (authUser) => !!authUser;\nexport default compose(withFirebase, withAuthorization(condition))(Addins);\n","/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/services.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/contactUs.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/footer.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Navigation/index.js",["112"],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Session/withAuthentication.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/constants/roles.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/Landing/about.js",[],"/Users/sheilahernandezdiaz/lessons/evergreen-react/src/components/SignOut/index.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"115","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":18,"column":6,"nodeType":"127","endLine":18,"endColumn":8,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"129","line":41,"column":19,"nodeType":"123","messageId":"124","endLine":41,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":120,"column":13,"nodeType":"132","endLine":128,"endColumn":14},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firebase.auth' and 'firebase.db'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'addinsKeys' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [firebase.auth, firebase.db]",{"range":"138","text":"139"},[571,573],"[firebase.auth, firebase.db]"]