[{"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/index.js":"1","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Firebase/index.js":"2","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/App/index.js":"3","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Firebase/firebase.js":"4","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/SignUp/index.js":"5","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Account/index.js":"6","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Admin/index.js":"7","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/header.js":"8","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/footer.js":"9","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Session/context.js":"10","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/SignOut/index.js":"11","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/services.js":"12","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/contactUs.js":"13","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Firebase/context.js":"14","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/PasswordForget/index.js":"15","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Home/index.js":"16","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/index.js":"17","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Session/withAuthorization.js":"18","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/about.js":"19","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/PasswordChange/index.js":"20","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Home/headerHome.js":"21","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Navigation/index.js":"22","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/AddinsDashboard/index.js":"23","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/constants/routes.js":"24","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Session/withAuthentication.js":"25","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/team.js":"26","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Home/newsletters.js":"27"},{"size":537,"mtime":1607891912000,"results":"28","hashOfConfig":"29"},{"size":162,"mtime":1608676158000,"results":"30","hashOfConfig":"29"},{"size":1264,"mtime":1606623447000,"results":"31","hashOfConfig":"29"},{"size":2131,"mtime":1610297407000,"results":"32","hashOfConfig":"29"},{"size":4853,"mtime":1610297350000,"results":"33","hashOfConfig":"29"},{"size":554,"mtime":1606623447000,"results":"34","hashOfConfig":"29"},{"size":5636,"mtime":1610422581000,"results":"35","hashOfConfig":"29"},{"size":802,"mtime":1612744311000,"results":"36","hashOfConfig":"29"},{"size":1738,"mtime":1613018819000,"results":"37","hashOfConfig":"29"},{"size":112,"mtime":1606623448000,"results":"38","hashOfConfig":"29"},{"size":481,"mtime":1606623448000,"results":"39","hashOfConfig":"29"},{"size":2607,"mtime":1612934475000,"results":"40","hashOfConfig":"29"},{"size":4158,"mtime":1612746263000,"results":"41","hashOfConfig":"29"},{"size":296,"mtime":1606623447000,"results":"42","hashOfConfig":"29"},{"size":2183,"mtime":1606623448000,"results":"43","hashOfConfig":"29"},{"size":768,"mtime":1613020745000,"results":"44","hashOfConfig":"29"},{"size":588,"mtime":1613019381000,"results":"45","hashOfConfig":"29"},{"size":1043,"mtime":1606623448000,"results":"46","hashOfConfig":"29"},{"size":4368,"mtime":1613019105000,"results":"47","hashOfConfig":"29"},{"size":2069,"mtime":1606623448000,"results":"48","hashOfConfig":"29"},{"size":1302,"mtime":1612751213000,"results":"49","hashOfConfig":"29"},{"size":8143,"mtime":1613023553000,"results":"50","hashOfConfig":"29"},{"size":13176,"mtime":1607234677000,"results":"51","hashOfConfig":"29"},{"size":331,"mtime":1607220450000,"results":"52","hashOfConfig":"29"},{"size":1054,"mtime":1606623448000,"results":"53","hashOfConfig":"29"},{"size":3815,"mtime":1613019426000,"results":"54","hashOfConfig":"29"},{"size":2549,"mtime":1613023443000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1ptl4r0",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/index.js",[],["116","117"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Firebase/index.js",[],["118","119"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/App/index.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Firebase/firebase.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/SignUp/index.js",["120"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\nimport { Row, FormGroup, FormControl } from \"react-bootstrap\";\n\nconst SignUpPage = () => (\n  <div className=\"container-fluid\">\n    <div class=\"row no-gutter\">\n      <div class=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\n      <div class=\"col-md-8 col-lg-6\">\n        <div class=\"login d-flex align-items-center py-5\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-9 col-lg-8 mx-auto\">\n                <h3 class=\"login-heading mb-4 \">Register!</h3>\n\n                <SignUpForm />\n\n                <Link to={ROUTES.LANDING}>\n                  <button className=\"btn btn-sm btn-primary btn-login text-uppercase font-weight-bold mb-2\">\n                    Back\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  isAdmin: false,\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = {};\n\n    if (isAdmin) {\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n\n      passwordOne,\n      passwordTwo,\n\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <div className=\"Signup\">\n        <form\n          onSubmit={this.onSubmit}\n          style={{\n            position: \"center\",\n            width: \"50%\",\n            marginLeft: \"20%\",\n            marginTop: \"10%\",\n          }}\n        >\n          <FormGroup controlId=\"username\">\n            <FormControl\n              className=\"form-control\"\n              type=\"text\"\n              value={username}\n              name=\"username\"\n              placeholder=\"Full Name\"\n              onChange={this.onChange}\n            />\n          </FormGroup>\n\n          <FormGroup id=\"email\">\n            <FormControl\n              className=\"form-control\"\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup id=\"inputPassword\">\n            <FormControl\n              name=\"passwordOne\"\n              value={passwordOne}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup id=\"inputPassword\">\n            <FormControl\n              name=\"passwordTwo\"\n              value={passwordTwo}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              required\n            />\n          </FormGroup>\n\n          {/* \n          <label>\n            Admin:\n            <input\n              name=\"isAdmin\"\n              type=\"checkbox\"\n              checked={isAdmin}\n              onChange={this.onChangeCheckbox}\n            />\n          </label> */}\n\n          <button\n            className=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\"\n            disabled={isInvalid}\n            type=\"submit\"\n          >\n            Sign Up\n          </button>\n\n          {error && <p>{error.message}</p>}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Account/index.js",[],["121","122"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Admin/index.js",["123"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/header.js",["124"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Header() {\n  const history = useHistory();\n  return (\n    <React.Fragment>\n      <header className=\"masthead\">\n        <div className=\"container\">\n          <div className=\"intro-text\">\n            {/* <h4 className=\"section-subheading intro-lead-in\">\n              Evergreen Community\n            </h4> */}\n            {/* <h4 className=\"section-subheading intro-lead-in\">Welcome!</h4> */}\n\n            {/* <button\n              onClick={() => history.push(\"/signup\")}\n              className=\"btn btn-primary btn-lg text-uppercase\"\n            >\n              {\" \"}\n              Register\n            </button> */}\n          </div>\n        </div>\n      </header>\n    </React.Fragment>\n  );\n}\n\nexport default Header;\n","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/footer.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Session/context.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/SignOut/index.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/services.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/contactUs.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Firebase/context.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/PasswordForget/index.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Home/index.js",["125"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/index.js",["126"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Session/withAuthorization.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/about.js",["127"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/PasswordChange/index.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Home/headerHome.js",["128","129"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Navigation/index.js",["130","131"],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/AddinsDashboard/index.js",["132"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\n\nclass Addins extends Component {\n  state = {\n    addins: [],\n\n    modalInsert: false,\n    modalEdit: false,\n    email: \"\",\n    id: \"\",\n\n    inputsForm: {\n      title: \"\",\n      category: \"\",\n      discipline: \"\",\n      description: \"\",\n      qty: \"\",\n\n      selectedOption: \"Construction\",\n    },\n  };\n\n  componentDidMount() {\n    this.props.firebase.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ id: user.uid, email: user.email });\n\n        this.props.firebase.db\n          .ref(\"/user-addins/\" + user.uid)\n          .on(\"value\", (snapshot) => {\n            const addins = [];\n\n            const addinsKeys = snapshot.forEach((addin) => {\n              const userAddin = { ...addin.val(), id: addin.key };\n              addins.push(userAddin);\n            });\n            this.setState({ addins: addins });\n          });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  /* <-- functions for Table --> */\n\n  handleEditRequisition(e) {\n    let addin = this.state.inputsForm;\n    this.props.firebase.db.ref(`/addins/${addin.id}`).set(addin);\n    this.props.firebase.db\n      .ref(`/user-addins/${this.state.id}/${addin.id}`)\n      .set(addin);\n    this.setState({ modalEdit: false });\n  }\n  handleDeleteRequisition(addin) {\n    this.props.firebase.db.ref(`/addins/${addin.id}`).remove();\n    this.props.firebase.db\n      .ref(`/user-addins/${this.state.id}/${addin.id}`)\n      .remove();\n  }\n  closeModal() {\n    this.setState({ modalInsert: false });\n  }\n  /* <-- functions for Table --> */\n\n  /* <-- functions for Modal --> */\n  handleChange = (e) => {\n    const inputsForm = { ...this.state.inputsForm };\n    inputsForm[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ inputsForm });\n  };\n\n  handleCreateRequisition() {\n    const uid = this.state.id;\n    const { inputsForm } = this.state;\n\n    let newAddinKey = this.props.firebase.db.ref().child(\"addins\").push().key;\n    let updates = {};\n    updates[\"/addins/\" + newAddinKey] = inputsForm;\n    updates[\"/user-addins/\" + uid + \"/\" + newAddinKey] = inputsForm;\n    return this.props.firebase.db.ref().update(updates);\n  }\n\n  handleOptionChange = (changeEvent) => {\n    this.setState({\n      inputsForm: {\n        ...this.state.inputsForm,\n        selectedOption: changeEvent.target.value,\n      },\n    });\n  };\n\n  handleCheckSubmit = (changeEvent) => {\n    changeEvent.preventDefault();\n    console.log(\"You have submitted:\", this.state.inputsForm.selectedOption);\n  };\n\n  /* <-- functions for Modal --> */\n  render() {\n    console.log(`this are my addins`, this.state.addins);\n    return (\n      <div className=\"App\">\n        <div\n          style={{\n            position: \"center\",\n            width: \"70%\",\n            marginLeft: \"15%\",\n            marginRight: \"15%\",\n            marginTop: \"5%\",\n          }}\n        >\n          <br />\n          <br />\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.setState({ modalInsert: true })}\n          >\n            HOA Approval Request\n          </button>\n          <br />\n          <br />\n\n          {/* <-- Table --> */}\n          <div className=\" header intro-lead-in\">\n            Your Requests to HOA Board:\n          </div>\n          <Table\n            responsive=\"lg\"\n            className=\"table-responsive-sm table-bordered table-hover\"\n          >\n            <thead className=\"table thead text-center\">\n              <tr>\n                <th>Neighbor Email </th>\n                <th>Document Name </th>\n                <th>Category</th>\n                <th>Discipline</th>\n                <th>Description</th>\n                <th>Qty</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody className=\"table tbody\">\n              {this.state.addins.map((addin, index) => {\n                console.log(addin);\n                return (\n                  <tr key={addin.id}>\n                    <td>{this.state.email}</td>\n\n                    <td>{addin.title}</td>\n                    <td>{addin.category}</td>\n                    <td>{addin.selectedOption}</td>\n                    <td>{addin.description}</td>\n                    <td>{addin.qty}</td>\n\n                    <td>\n                      <button\n                        className=\"btn btn-secondary btn-sm mx-2\"\n                        onClick={() =>\n                          this.setState({ modalEdit: true, inputsForm: addin })\n                        }\n                      >\n                        Edit\n                      </button>\n\n                      <button\n                        className=\"btn btn-danger btn-sm\"\n                        onClick={() => this.handleDeleteRequisition(addin)}\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n\n          {/* /* </-- Table --> */}\n\n          <br />\n          <br />\n\n          <Link to={ROUTES.HOME}>\n            <button className=\"btn btn-secondary btn-sm mx-2\">\n              Back to Home Page\n            </button>\n          </Link>\n\n          {/* <-- Modal Insert --> */}\n          <Modal isOpen={this.state.modalInsert}>\n            <ModalHeader>\n              Fill out the Form for your Addin Requests:\n            </ModalHeader>\n\n            <ModalBody>\n              <div className=\"form-group\">\n                <label>Document Name: </label>\n                <br />\n                <input\n                  type=\"textarea\"\n                  value={this.state.inputsForm.title}\n                  className=\"form-control\"\n                  name=\"title\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <label>Category: </label>\n                <br />\n                <input\n                  type=\"text\"\n                  value={this.state.inputsForm.category}\n                  className=\"form-control\"\n                  name=\"category\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                {/* <-- Radio button --> */}\n                <form onSubmit={this.handleCheckSubmit}>\n                  <h5>Discipline:</h5>\n                  <div className=\"radio-check\">\n                    <label>\n                      <br />\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Construction\"\n                        checked={\n                          this.state.inputsForm.selectedOption ===\n                          \"Construction\"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Construction\n                    </label>\n                  </div>\n                  <div className=\"radio-check\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Landscaping\"\n                        checked={\n                          this.state.inputsForm.selectedOption === \"Landscaping\"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Landscaping\n                    </label>\n                  </div>\n                </form>\n                {/* <-- Radio button --> */}\n                <br />\n\n                <label>Description: </label>\n                <br />\n                <input\n                  type=\"textarea\"\n                  value={this.state.inputsForm.description}\n                  className=\"form-control\"\n                  name=\"description\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <label>Qty: </label>\n                <br />\n                <input\n                  type=\"number\"\n                  value={this.state.inputsForm.qty}\n                  className=\"form-control\"\n                  name=\"qty\"\n                  onChange={this.handleChange}\n                />\n                <br />\n              </div>\n            </ModalBody>\n\n            <ModalFooter>\n              <button\n                className=\"btn btn-success\"\n                onClick={(e) => {\n                  this.handleCreateRequisition(e);\n                  this.closeModal();\n                }}\n              >\n                Insert\n              </button>{\" \"}\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => this.setState({ modalInsert: false })}\n              >\n                Delete\n              </button>\n            </ModalFooter>\n          </Modal>\n          {/* /<-- Modal Insert --> */}\n\n          {/* <-- Modal Edit --> */}\n          <Modal isOpen={this.state.modalEdit}>\n            <ModalHeader>Edit Your Request:</ModalHeader>\n            <ModalBody>\n              <div className=\"form-group\">\n                <label>Document Name: </label>\n                <br />\n                <input\n                  type=\"text\"\n                  value={this.state.inputsForm.title}\n                  className=\"form-control\"\n                  name=\"title\"\n                  onChange={this.handleChange}\n                />\n                <br />\n\n                <label>Category: </label>\n                <br />\n                <input\n                  type=\"text\"\n                  value={this.state.inputsForm.category}\n                  className=\"form-control\"\n                  name=\"category\"\n                  onChange={this.handleChange}\n                />\n                <br />\n\n                {/* <-- Radio button --> */}\n                <form onSubmit={this.handleCheckSubmit}>\n                  <h4>Discipline:</h4>\n                  <div className=\"radio-check\">\n                    <label>\n                      <br />\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Construction\"\n                        checked={\n                          this.state.inputsForm.selectedOption ===\n                          \"Construction\"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Construction\n                    </label>\n                  </div>\n                  <div className=\"radio-check\">\n                    <label>\n                      <br />\n                      <input\n                        type=\"radio\"\n                        name=\"discipline\"\n                        value=\"Landscaping \"\n                        checked={\n                          this.state.inputsForm.selectedOption ===\n                          \"Landscaping \"\n                        }\n                        className=\"form-control\"\n                        onChange={this.handleOptionChange}\n                      />\n                      Landscaping\n                    </label>\n                  </div>\n                </form>\n                {/* <-- Radio button --> */}\n                <br />\n                <label>Description: </label>\n                <br />\n                <input\n                  type=\"textarea\"\n                  value={this.state.inputsForm.description}\n                  className=\"form-control\"\n                  name=\"description\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <label> Qty: </label>\n                <br />\n                <input\n                  type=\"number\"\n                  value={this.state.inputsForm.qty}\n                  className=\"form-control\"\n                  name=\"qty\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <br />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <button\n                className=\"btn btn-success\"\n                onClick={(e) => this.handleEditRequisition(e)}\n              >\n                Submit Changes\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => this.setState({ modalEdit: false })}\n              >\n                Delete\n              </button>\n            </ModalFooter>\n          </Modal>\n          {/* /<-- Modal Edit --> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = (authUser) => !!authUser;\nexport default compose(withFirebase, withAuthorization(condition))(Addins);\n","/Users/sheilahernandezdiaz/HOA/evergreen-react/src/constants/routes.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Session/withAuthentication.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Landing/team.js",[],"/Users/sheilahernandezdiaz/HOA/evergreen-react/src/components/Home/newsletters.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":6,"column":10,"nodeType":"141","messageId":"142","endLine":6,"endColumn":13},{"ruleId":"133","replacedBy":"143"},{"ruleId":"135","replacedBy":"144"},{"ruleId":"139","severity":1,"message":"145","line":57,"column":19,"nodeType":"141","messageId":"142","endLine":57,"endColumn":29},{"ruleId":"139","severity":1,"message":"146","line":5,"column":9,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"147","line":10,"column":8,"nodeType":"141","messageId":"142","endLine":10,"endColumn":12},{"ruleId":"139","severity":1,"message":"147","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":12},{"ruleId":"139","severity":1,"message":"148","line":8,"column":10,"nodeType":"141","messageId":"142","endLine":8,"endColumn":14},{"ruleId":"139","severity":1,"message":"149","line":6,"column":10,"nodeType":"141","messageId":"142","endLine":6,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":18,"column":6,"nodeType":"152","endLine":18,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":87,"column":11,"nodeType":"156","endLine":95,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":198,"column":13,"nodeType":"156","endLine":206,"endColumn":14},{"ruleId":"139","severity":1,"message":"145","line":41,"column":19,"nodeType":"141","messageId":"142","endLine":41,"endColumn":29},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar",["157"],["158"],"'addinsKeys' is assigned a value but never used.","'history' is assigned a value but never used.","'Team' is defined but never used.","'Link' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firebase.auth' and 'firebase.db'. Either include them or remove the dependency array.","ArrayExpression",["159"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [firebase.auth, firebase.db]",{"range":"162","text":"163"},[571,573],"[firebase.auth, firebase.db]"]